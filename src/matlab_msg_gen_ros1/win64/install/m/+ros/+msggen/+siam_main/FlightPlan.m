
classdef FlightPlan < ros.Message
    %FlightPlan MATLAB implementation of siam_main/FlightPlan
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'siam_main/FlightPlan' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '30f199e7cf367208ba384eb9bfe052f5' % The MD5 Checksum of the message definition
        PropertyList = { 'Orig' 'Dest' 'Route' 'FlightPlanId' 'Status' 'Priority' 'OperatorId' 'DroneId' 'Dtto' } % List of non-constant message properties
        ROSPropertyList = { 'orig' 'dest' 'route' 'flightPlanId' 'status' 'priority' 'operatorId' 'droneId' 'dtto' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.Point' ...
            'ros.msggen.geometry_msgs.Point' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Orig
        Dest
        Route
        FlightPlanId
        Status
        Priority
        OperatorId
        DroneId
        Dtto
    end
    methods
        function set.Orig(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'Orig')
            obj.Orig = val;
        end
        function set.Dest(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'Dest')
            obj.Dest = val;
        end
        function set.Route(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.geometry_msgs.Point.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.geometry_msgs.Point'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'Route')
            obj.Route = val;
        end
        function set.FlightPlanId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'FlightPlanId');
            obj.FlightPlanId = uint16(val);
        end
        function set.Status(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'Status');
            obj.Status = uint8(val);
        end
        function set.Priority(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'Priority');
            obj.Priority = int8(val);
        end
        function set.OperatorId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'OperatorId');
            obj.OperatorId = uint16(val);
        end
        function set.DroneId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'DroneId');
            obj.DroneId = uint16(val);
        end
        function set.Dtto(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'FlightPlan', 'Dtto');
            obj.Dtto = uint32(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.siam_main.FlightPlan.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.siam_main.FlightPlan(strObj);
        end
    end
end
