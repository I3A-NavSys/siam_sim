figure(1);

%Test data
% t = 1:0.1:10;
% x = sin(t);
% y = cos(t);
% z = tan(t);
% xref = y;
% yref = x;
% zref = -z;
%waypoints = 2 .* rand([4,3]) - 1;

%Using simulated data
drone = UTM.S_Registry.drones(1);
uplan = UTM.S_Registry.flightPlans(1);
waypoints = [[uplan.route(1,:).X]', [uplan.route(1,:).Y]', [uplan.route(1,:).Z]'];

t = zeros(1,size(drone.locs,2));
x = zeros(1,size(drone.locs,2));
y = zeros(1,size(drone.locs,2));
z = zeros(1,size(drone.locs,2));
dx = zeros(1,size(drone.locs,2));
dy = zeros(1,size(drone.locs,2));
dz = zeros(1,size(drone.locs,2));

for i=1:1:size(drone.locs,2)
    tel = drone.locs(i);
    t(i) = tel.Time.Sec;
    x(i) = tel.Pose.Position.X;
    y(i) = tel.Pose.Position.Y;
    z(i) = tel.Pose.Position.Z;
    dx(i) = tel.Velocity.Linear.X;
    dy(i) = tel.Velocity.Linear.Y;
    dz(i) = tel.Velocity.Linear.Z;
end

%Generating data from Uplan
ut = zeros(1,size(uplan.route,2)+2);

%Reference data
%Sim data recoding must be start before Uplan execution and end after Uplan finish
ut(1) = t(1);
for i=1:size(uplan.route,2)
    ut(i+1) = uplan.route(1,i).T.Sec;
end     
ut(i+2) = t(end);

ux = [x(i) uplan.route(1,:).X uplan.route(1,end).X];
uy = [drone.initLoc(2) uplan.route(1,:).Y uplan.route(1,end).Y];
uz = [0 uplan.route(1,:).Z 0];

dux(1) = 0; duy(1) = 0; duz(1) = 0;
for i=2:size(uplan.route,2)
    timeBetween = uplan.route(1,i).T.Sec - uplan.route(1,i-1).T.Sec;
    dux(i) = (ux(i)-ux(i-1))/timeBetween;
    duy(i) = (uy(i)-uy(i-1))/timeBetween;
    duz(i) = (uz(i)-uz(i-1))/timeBetween;
end
dux(i+1) = 0; duy(i+1) = 0; duz(i+1) = 0;

%Generating datetimes
sim_dates = datetime(t,'ConvertFrom','epochtime','Epoch',0);
ref_dates = datetime(ut,'ConvertFrom','epochtime','Epoch',0);

% X Y Z of the simulation
sim_x_timetable = timetable(sim_dates',x');
sim_x_timetable = retime(sim_x_timetable,unique(sim_x_timetable.Time),'mean');
sim_y_timetable = timetable(sim_dates',y');
sim_y_timetable = retime(sim_y_timetable,unique(sim_y_timetable.Time),'mean');
sim_z_timetable = timetable(sim_dates',z');
sim_z_timetable = retime(sim_z_timetable,unique(sim_z_timetable.Time),'mean');

% dX dY dZ of the simulation
sim_dx_timetable = timetable(sim_dates',dx');
sim_dx_timetable = retime(sim_dx_timetable,unique(sim_dx_timetable.Time),'mean');
sim_dy_timetable = timetable(sim_dates',dy');
sim_dy_timetable = retime(sim_dy_timetable,unique(sim_dy_timetable.Time),'mean');
sim_dz_timetable = timetable(sim_dates',dz');
sim_dz_timetable = retime(sim_dz_timetable,unique(sim_dz_timetable.Time),'mean');

% X Y Z of the reference
ref_x_timetable = timetable(ref_dates', ux');
ref_y_timetable = timetable(ref_dates', uy');
ref_z_timetable = timetable(ref_dates', uz');

% dX dY dZ of the reference
dut = [ut(1):1:ut(end)];
ref_dates_interpolated = datetime(dut,'ConvertFrom','epochtime','Epoch',0);
temporal = timetable(ref_dates_interpolated');
temporal = synchronize(temporal,ref_x_timetable,'union','linear');

ref_dx_timetable = timetable(ref_dates(1:end-1)', dux');
ref_dy_timetable = timetable(ref_dates(1:end-1)', duy');
ref_dz_timetable = timetable(ref_dates(1:end-1)', duz');

%Syncrionization between tables and interpolation
x_timetable = synchronize(sim_x_timetable,ref_x_timetable, 'union', 'linear');
y_timetable = synchronize(sim_y_timetable,ref_y_timetable, 'union', 'linear');
z_timetable = synchronize(sim_z_timetable,ref_z_timetable, 'union', 'linear');
dx_timetable = synchronize(sim_dx_timetable,ref_dx_timetable, 'union', 'linear');
dy_timetable = synchronize(sim_dy_timetable,ref_dy_timetable, 'union', 'linear');
dz_timetable = synchronize(sim_dz_timetable,ref_dz_timetable, 'union', 'linear');
x_timetable = mergevars(x_timetable,[1 2],'NewVariableName','X');
y_timetable = mergevars(y_timetable,[1 2],'NewVariableName','Y');
z_timetable = mergevars(z_timetable,[1 2],'NewVariableName','Z');
dx_timetable = mergevars(dx_timetable,[1 2],'NewVariableName','X');
dy_timetable = mergevars(dy_timetable,[1 2],'NewVariableName','Y');
dz_timetable = mergevars(dz_timetable,[1 2],'NewVariableName','Z');

%3D viewer
subplot(2,2,[1 3]);
plot3(x,y,z);
grid on;
hold on;
plot3(ux(1:end-1),uy(1:end-1),uz(1:end-1));
plot3(waypoints(:,1),waypoints(:,2),waypoints(:,3),'or');
title("Route 3D view")
xlabel("pos X");
ylabel("pos Y");
zlabel("pos Z");
hold off;

%X,Y, Z pos
var_names = ["Simulated", "Reference"];
tab = table([x'], [y'], [z'],'VariableNames',{'X','Y','Z'});
subplot(2,2,2);
stackedplot([x_timetable, y_timetable, z_timetable]);
title("Positions through time");
xlabel('Simulated time');
grid on;

%X,Y, Z accel
var_names = ["Simulated", "Reference"];
tab = table([dx'], [dy'], [dz'],'VariableNames',{'X','Y','Z'});
subplot(2,2,4);
stackedplot([dx_timetable, dy_timetable, dz_timetable]);
title("Velocities through time");
xlabel('Simulated time');
grid on;

drawnow;

figure(2);
yyaxis left;
plot(ref_x_timetable,"Var1");
hold on;
yyaxis right;
grid on;
plot(temporal.Time(1:end-1),diff(temporal.Var1'));
hold off;
